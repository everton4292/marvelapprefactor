apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-parcelize'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 33
    defaultConfig {
        applicationId "com.pessoadev.marvelapp"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField 'String', 'BASE_URL', '"https://gateway.marvel.com/"'
        buildConfigField 'String', 'API_PRIVATE', '"666403411b1415d0ae7c14a73e7160504ac83e29"'
        buildConfigField 'String', 'API_PUBLIC', '"15e69ffe02879d498e25896062349bc4"'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
    }
    viewBinding {
        enabled = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        pickFirst 'META-INF/kotlinx-io.kotlin_module'
        pickFirst 'META-INF/atomicfu.kotlin_module'
        pickFirst 'META-INF/kotlinx-coroutines-io.kotlin_module'
        exclude("META-INF/DEPENDENCIES")
        exclude("META-INF/LICENSE")
        exclude("META-INF/LICENSE.txt")
        exclude("META-INF/license.txt")
        exclude("META-INF/NOTICE")
        exclude("META-INF/NOTICE.txt")
        exclude("META-INF/notice.txt")
        exclude('META-INF/LICENSE-notice.md')
        exclude("META-INF/ASL2.0")
        exclude("META-INF/*.kotlin_module")
        exclude("META-INF/LICENSE.md")

    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$app_compact_version"
    implementation "androidx.cardview:cardview:$cardview_version"
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_extensions_version"
    implementation "com.google.android.material:material:$google_material_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation "androidx.core:core-ktx:$android_core_ktx_version"


    //rest
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$converter_gson_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3_logging_interceptor_version"

    //koin
    implementation "io.insert-koin:koin-android:$koin_version"
    implementation "io.insert-koin:koin-core:$koin_version"

    //coroutines Libs
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    //room
    implementation "androidx.room:room-runtime:$room_version"
    testImplementation project(path: ':app')
    testImplementation project(path: ':app')
    testImplementation project(path: ':app')
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    //image loader
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    //tests
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinx_coroutines_test_version"
    testImplementation "junit:junit:$junit_version"
    testImplementation "io.mockk:mockk:$mockk_version"
    testImplementation "io.mockk:mockk-android:$mockk_version"
    testImplementation "io.mockk:mockk-agent:${mockk_version}"

    // Koin testing tools
    testImplementation "io.insert-koin:koin-test:$koin_version"
    // Needed JUnit version
    testImplementation "io.insert-koin:koin-test-junit4:$koin_version"

    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "io.mockk:mockk-android:$mockk_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    androidTestImplementation "androidx.test:runner:$test_runner_version"
    androidTestImplementation "androidx.test:rules:$test_rules_version"
    androidTestImplementation "androidx.test.ext:junit:$test_ext_version"

}
